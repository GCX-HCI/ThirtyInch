language: android
jdk:
    - oraclejdk8

# Cache our Gradle cache
# so we don't have to download everything again and again...
cache:
  directories:
  - $HOME/.gradle

# Define multiple jobs
# to get faster unittest feedback
jobs:
  include:
    - stage: unittest
      before_script: skip
      script: echo -e "\nd56f5187479451eabf01fb78af6dfcb131a6481e" > "$HOME/android-sdk/licenses/android-sdk-license"
      script: echo -e "\n84831b9409646a918e30573bab4c9c91346d8abd" > "$HOME/android-sdk/licenses/android-sdk-preview-license"
      script: ./gradlew testDebugUnitTest
    - stage: all
      script: echo -e "\nd56f5187479451eabf01fb78af6dfcb131a6481e" > "$HOME/android-sdk/licenses/android-sdk-license"
      script: echo -e "\n84831b9409646a918e30573bab4c9c91346d8abd" > "$HOME/android-sdk/licenses/android-sdk-preview-license"
      script: ./gradlew build jacocoTestReportDebug assembleAndroidTest connectedCheck

android:
  components:
    # Uncomment the lines below if you want to
    # use the latest revision of Android SDK Tools
    - tools
    - platform-tools
    - tools

    # The SDK version used to compile your project
    - android-22
    - android-26

    # Specify at least one system image,
    # if you need to run emulator(s) during your tests
    - sys-img-armeabi-v7a-android-22


before_script:

  # First assemble the project before launching the emulator
  - ./gradlew assemble

  # List available emulators
  - android list targets

  # Emulator Management: Create, Start and Wait
  - echo no | android create avd --force -n test -t android-22 --abi armeabi-v7a
  - emulator -avd test -no-skin -no-audio -no-window &
  - android-wait-for-emulator
  - adb shell input keyevent 82 &

after_success:
  - bash <(curl -s https://codecov.io/bash)